package org.jodaengine.ext.listener.scheduler;

import org.jodaengine.ext.listener.Listener;
import org.jodaengine.navigator.schedule.SchedulerEvent;
import org.jodaengine.process.token.BPMNToken;

/**
 * The below Javadoc comment is awesome and it was autogenerated.
 * I know I should delete it, but I can't. I dunno if it is correct :P
 * I know however, that if this interface should be implemented by a Listener.
 * 
 * The listener interface for receiving scheduler events.
 * The class that is interested in processing a scheduler
 * event implements this interface, and the object created
 * with that class is registered with a component using the
 * component's <code>addSchedulerListener</code> method. When
 * the scheduler event occurs, that object's appropriate
 * method is invoked.
 * 
 * @see SchedulerEvent
 */
public interface SchedulerListener extends Listener {

    /**
     * This method gets called whenever a process instance is submitted to the scheduler.
     * 
     * @param numberOfTokens
     *            the number of instances the scheduler currently schedules
     * @param bPMNToken
     *            the process instance that got submitted
     */
    void processInstanceSubmitted(int numberOfTokens, BPMNToken bPMNToken);

    /**
     * This method gets called whenever a process instance is retreived from the scheduler.
     * 
     * @param numberOfTokens
     *            the number of instances the scheduler currently schedules
     * @param bPMNToken
     *            the process instance that got retrieved
     */
    void processInstanceRetrieved(int numberOfTokens, BPMNToken bPMNToken);
}
